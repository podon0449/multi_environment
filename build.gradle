apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
buildscript {
    ext {
        springBootVersion = '2.4.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"

    }
}
allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.multi'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }
    if (project.name != 'multi-api' || project.name != 'multi-admin') {
        bootJar {
            enabled = false
        }
        jar {
            enabled = true
        }
    }
    // 하위 모듈에서 공통으로 사용하는 세팅 추가
    dependencies {
        implementation 'com.github.podon0449:excel-download:1.0.2'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
        api ("org.springframework.boot:spring-boot-starter-web:2.4.2")

    }
    test {
        useJUnitPlatform()
    }
}
def profile = project.hasProperty("profile") ? project.property("profile").toString() : "local"
println "profile  : $profile"


ext.profile = (!project.hasProperty('profile') || !profile) ? "$profile" : profile
sourceSets {
    main{
        resources {
            srcDirs "src/main/resources/resources-${profile}"
            /*exclude "resources-*"*/
        }
    }
}



